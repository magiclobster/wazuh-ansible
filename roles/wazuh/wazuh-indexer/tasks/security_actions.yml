- name: Configure IP (Private address)
  ansible.builtin.set_fact:
    target_address: "{{ hostvars[inventory_hostname]['private_ip'] if not single_node else indexer_network_host }}"
  when:
    - hostvars[inventory_hostname]['private_ip'] is defined

- name: Configure IP (Public address)
  ansible.builtin.set_fact:
    target_address: "{{ inventory_hostname if not single_node else indexer_network_host }}"
  when:
    - hostvars[inventory_hostname]['private_ip'] is not defined

- name: Ensure Indexer certificates directory permissions.
  ansible.builtin.file:
    path: "{{ indexer_conf_path }}/certs/"
    state: directory
    owner: wazuh-indexer
    group: wazuh-indexer
    mode: "0500"

- name: Copy the node & admin certificates to Wazuh indexer cluster
  ansible.builtin.copy:
    src: "{{ local_certs_path }}/wazuh-certificates/{{ item }}"
    dest: "{{ indexer_conf_path }}/certs/"
    owner: wazuh-indexer
    group: wazuh-indexer
    mode: "0400"
  with_items:
    - root-ca.pem
    - root-ca.key
    - "{{ indexer_node_name }}-key.pem"
    - "{{ indexer_node_name }}.pem"
    - admin-key.pem
    - admin.pem

- name: Restart Wazuh indexer with security configuration
  ansible.builtin.systemd:
    name: wazuh-indexer
    state: restarted

- name: Copy the Opensearch security internal users template
  ansible.builtin.template:
    src: "templates/internal_users.yml.j2"
    dest: "{{ indexer_sec_plugin_conf_path }}/internal_users.yml"
    mode: 0644
  run_once: true

- name: Configure security (on first play host)
  when: inventory_hostname == ansible_play_hosts[0]
  block:
    - name: Hashing the custom admin password
      ansible.builtin.shell: |
        export JAVA_HOME=/usr/share/wazuh-indexer/jdk
        {{ indexer_sec_plugin_tools_path }}/hash.sh -p '{{ indexer_admin_password }}'
      register: indexer_admin_password_hashed
      changed_when: false
      no_log: '{{ indexer_nolog_sensible | bool }}'

    - name: Set the Admin user password
      ansible.builtin.replace:
        path: "{{ indexer_sec_plugin_conf_path }}/internal_users.yml"
        regexp: '(?<=admin:\n  hash: )(.*)(?=)'
        replace: "{{ indexer_password_hash | quote }}"
      vars:
        indexer_password_hash: "{{ indexer_admin_password_hashed.stdout_lines | last }}"

    # this can also be achieved with password_hash, but it requires dependencies on the controller
    - name: Hash the kibanaserver role/user pasword
      ansible.builtin.shell: |
        export JAVA_HOME=/usr/share/wazuh-indexer/jdk
        {{ indexer_sec_plugin_tools_path }}/hash.sh -p '{{ dashboard_password }}'
      register: indexer_kibanaserver_password_hashed
      changed_when: false
      no_log: '{{ indexer_nolog_sensible | bool }}'

    - name: Set the kibanaserver user password
      ansible.builtin.replace:
        path: "{{ indexer_sec_plugin_conf_path }}/internal_users.yml"
        regexp: '(?<=kibanaserver:\n  hash: )(.*)(?=)'
        replace: "{{ indexer_password_hash | quote }}"
      vars:
        indexer_password_hash: "{{ indexer_kibanaserver_password_hashed.stdout_lines | last }}"

    - name: Initialize the Opensearch security index in Wazuh indexer
      ansible.builtin.command: >
        sudo -u wazuh-indexer OPENSEARCH_PATH_CONF={{ indexer_conf_path }}
        JAVA_HOME=/usr/share/wazuh-indexer/jdk
        {{ indexer_sec_plugin_tools_path }}/securityadmin.sh
        -cd {{ indexer_sec_plugin_conf_path }}/
        -icl -p 9200 -cd {{ indexer_sec_plugin_conf_path }}/
        -nhnv
        -cacert {{ indexer_conf_path }}/certs/root-ca.pem
        -cert {{ indexer_conf_path }}/certs/admin.pem
        -key {{ indexer_conf_path }}/certs/admin-key.pem
        -h {{ target_address }}
      retries: 2
      delay: 5
      register: result
      changed_when: false
      until: result.rc == 0

- name: Create custom user
  ansible.builtin.uri:
    url: "https://{{ target_address }}:{{ indexer_http_port }}/_plugins/_security/api/internalusers/{{ indexer_custom_user }}"
    method: PUT
    user: "admin" # Default Indexer user is always "admin"
    password: "{{ indexer_admin_password }}"
    body: |
      {
        "password": "{{ indexer_admin_password }}",
        "backend_roles": ["{{ indexer_custom_user_role }}"]
      }
    body_format: json
    validate_certs: no
    status_code: 200,201,401
    return_content: yes
    timeout: 4
  when:
    - indexer_custom_user is defined and indexer_custom_user
    - inventory_hostname == ansible_play_hosts[0]
