---
- name: Check if certificates already exists
  ansible.builtin.stat:
    path: "{{ local_certs_path }}"
  register: certificates_folder
  delegate_to: localhost
  become: false
  tags:
    - generate-certs

- name: Generate certificates if certificates folder is missing
  run_once: true
  delegate_to: localhost
  become: false
  tags:
    - generate-certs
  when:
    - not certificates_folder.stat.exists
  block:
    - name: Local action | Create local temporary directory for certificates generation
      ansible.builtin.file:
        path: "{{ local_certs_path }}"
        mode: "0755"
        state: directory

    - name: Local action | Check that the generation tool exists
      ansible.builtin.stat:
        path: "{{ local_certs_path }}/wazuh-certs-tool.sh"
      register: tool_package

    - name: Local action | Download certificates generation tool
      ansible.builtin.get_url:
        url: "{{ certs_gen_tool_url }}"
        dest: "{{ local_certs_path }}/wazuh-certs-tool.sh"
        mode: "0755"
      when: not tool_package.stat.exists and not macos_localhost

    - name: Local action | Prepare the certificates generation template file
      ansible.builtin.template:
        src: "templates/config.yml.j2"
        dest: "{{ local_certs_path }}/config.yml"
        mode: "0644"
      register: tlsconfig_template

    - name: Local action | Generate the node & admin certificates in local
      ansible.builtin.command: >-
        bash {{ local_certs_path }}/wazuh-certs-tool.sh -A
      changed_when: false
      when: not macos_localhost

    - name: Local action | Check for Docker installation on macOS
      ansible.builtin.command: docker --version
      register: docker_check
      changed_when: false
      when: macos_localhost
      ignore_errors: true

    - name: Local action | Fail if Docker is not installed
      ansible.builtin.fail:
        msg: "Docker is not installed on this host."
      when: (docker_check.rc | default(1)) != 0 and macos_localhost

    - name: Local action | Run Docker container on macOS
      community.docker.docker_container:
        name: wazuh-cert-tool
        image: "{{ wazuh_certs_tool_docker }}"
        state: started
        auto_remove: true
        volumes:
          - "{{ local_certs_path }}/config.yml:/config/certs.yml"
          - "{{ local_certs_path }}/wazuh-certificates/:/certificates/"
      when: macos_localhost

    - name: Local action | Remove Docker image after execution
      community.docker.docker_image:
        name: "{{ wazuh_certs_tool_docker }}"
        state: absent
        force_absent: true
      when: macos_localhost
